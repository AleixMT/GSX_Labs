#!/bin/bash
poni="Es vol implementar un script altausers per donar d’alta varis usuaris
de manera simple:
• El login de l’usuari serà: el nom, i la primera lletra del cognom1
i la primera lletra del cognom 2. En cas d’empat, es posarà un
número darrera que s’anirà incrementant.
• El passwd serà el número de telèfon.
• Els directoris d’entrada estaran sota el directori /usuaris i es
diran con el seu login.
La resta d’informació s’ha d’agafar dels següents 2 fitxers:
• Un arxiu de configuració /root/conf/.usuaris on hi haurà la
configuració general de la nostra empresa. El format de l’arxiu
serà el següent:
• path absolut del directori on hi ha els fitxers de
configuració inicial que s’han de copiar al directori
d’entrada dels usuaris
• uidmin-uidmax
• gidmin-gidmax
• shell que es posarà a l’usuari
• Un arxiu que es passarà per paràmetre amb la informació de
l’usuari que vulguem crear. El format de l’arxiu serà el següent:
(Tots els camps estaran separats per , i poden contenir qualsevol
tipus de caràcter)
DNI, Nom, Cognom1, Cognom2, telèfon, grup1, cpu
assignada, grup2, cpu assignada, ...
• El primer grup que passem serà el seu grup primari, la resta
de grups han de ser secundaris
• Darrera del grup hi ha en quina cpu volem que s’executi
l’usuari quan estigui en el grup actiu indicat.
• L’script s’ha de deixar preparat per tal de que quan es donin
d’alta nous usuaris es pugui tornar a executar i afegeixi
únicament els nous usuaris, sense modificar els ja existents. Per
tal d’implementar l’script, s’han d’utilitzar les comandes més
adients de la distribució de debian dels laboratoris."

function ayuda {
	echo "
###############################################################################
# Autors: Cristòfol Daudèn, Aleix Marine i Josep Marín Llaó                                           
# Data d'implementació: 13/3/2018                                                   
# Versio 1.0                                                                        
# Permisos:							                                   
# Descripció i paràmetres: 							
###############################################################################
"
}

#mirem que s'hagin introduit tots els arguments
if [ $# -lt 1 ]; then
	echo "Error, you need to introduce an argument!"
	ayuda
	exit 1
fi

#Mirem parametre d'ajuda
if [ "$1" = "-h" ]; then
	ayuda
	exit 0
fi

# Comprovem que es tinguin permisos de root
if [ $(whoami) != "root" ]; then
	echo "ERROR, Root permissions needed"
	exit 1
fi

# Comprovem existencia de directoris
if [ ! -d "/root" ]; then
	echo -e "\nError, directory /root does not exist. Creating..."
	mkdir /root
fi

if [ ! -d "/root/conf" ]; then
	echo -e "\nError, directory /root/conf does not exist. Creating..."
	mkdir /root/conf
fi

if [ ! -f "/root/conf/.usuaris" ]; then
	echo -e "\nError, file /root/conf/.usuaris does not exist. Creating..."
	echo "" > /root/conf/.usuaris
	echo -e "\nNow /root/conf/.usuaris is empty, introduce correct data as specified in headers"
	exit 1
fi

if [ ! -f "$1" ]; then
	echo -e "\nError, file $1 specified in argument, does not exist or is not a valid file. " 
	echo -e "\nSpecify a valid file and execute this script"
	exit 2
fi

CONF_PATH="/root/conf/.usuaris"
# Open configuration file CONF_PATH
  #   skel
  #   uidmin-uidmax
  #   gidmin-gidmax
  #   shell
skel=$(sed -n 1 $CONF_PATH)
uidmin=$(sed -n 2 $CONF_PATH | cut -d "-" -f1)
uidmax=$(sed -n 2 $CONF_PATH | cut -d "-" -f2)
gidmin=$(sed -n 3 $CONF_PATH | cut -d "-" -f1)
gidmax=$(sed -n 3 $CONF_PATH | cut -d "-" -f2)
shell=$(sed -n 4 $CONF_PATH)

# Add user/s
while IFS="," read DNI NAME SUR1 SUR2 TLFN GRUPS 
do
	USR_NAME="$NAME${SUR1:0:1}${SUR2:0:1}"
	aux="$USR"
	cont=0
	# Check if user is already registered
	if [ ! -z $(cat /etc/passwd | grep -w $DNI) ]; then #Si la linia on trobem el DNI de 
		echo "The user with DNI $DNI is already registered." >&2
		continue # instruccio break; i passem al seguent user
  	fi
	# Creacio del nom d'usuari 
	while [ ! -z $(id -u $aux) ]; do # Mirem si aux es un nom adequat i sino incrementem comptador i generem nou nom
		aux="$USR$cont"
		cont=$((cont + 1))
	done
	adduser --firstuid $uidmin --lastuid $uidmax 
	useradd -c "$DNI" -d "/usuaris/$USR" -s "$shell" -m -k "$skel" -G "$GRUPS" "$aux"
	echo "$USR:$TLFN" | chpasswd
done < $1








exit 0
